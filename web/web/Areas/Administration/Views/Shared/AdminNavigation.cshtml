@using web.Service.Model
@{
    int backlogCount;
}
@using (var database = new DatabaseEntities())
{
    // This is a pretty big SoC violation, but I can live with it.
    backlogCount = database.Items.Count(i => !i.Approved);
}

<div class="well" style="max-width: 340px; padding: 8px 0;">
    <ul class="nav nav-list">
        <li class="nav-header">Administration</li>
        <li class="@(Request.Url.AbsolutePath.Contains("Backlog") ? "active" : "")">
            <a href="/Administration/Backlog">Backlog @if (backlogCount != 0)
            {
                <span class="badge badge-important pull-right">@backlogCount</span>
            }</a>
        </li>
        <li class="@(Request.Url.AbsolutePath.Contains("Category") ? "active" : "")"><a href="/Administration/Category">Categories</a></li>
        <li class="@(Request.Url.AbsolutePath.Contains("Users") ? "active" : "")"><a href="#">Users</a></li>
        <li class="@(Request.Url.AbsolutePath.Contains("Updates") ? "active" : "")"><a href="#">Minecraft Updates</a></li>
        <li class="@(Request.Url.AbsolutePath.Contains("Updates") ? "active" : "")"><a href="#">Flagged Content</a></li>
        <li class="@(Request.Url.AbsolutePath.Contains("Settings") ? "active" : "")"><a href="#">Settings</a></li>
    </ul>
</div>